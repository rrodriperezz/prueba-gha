on: push
name: deploy
jobs:
  build-and-push:
    name: build and push image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: ${{ github.ref }}
    - name: build and push to docker
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ github.repository }}
        tag_with_ref: true
        tag_with_sha: true
        tags: ${{ github.sha }}
  deploy-to-cluster:
    name: deploy to cluster
    runs-on: ubuntu-latest
    env:
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      HOLA: test
    needs: build-and-push
    steps:
    - uses: actions/checkout@master
    - name: deploy to cluster
      uses: yokawasa/action-setup-kube-tools@v0.4.0
      with:
        kubectl: '1.23.5'
        kustomize: '3.7.0'
    - name: kubectl
      id: kubectl
      run: |
        mkdir -p ~/.kube/
        echo $KUBE_CONFIG_DATA | base64 -di > ~/.kube/config
        cd .kustomize
        kustomize edit set image prueba-gha=${{ github.repository }}:${{ github.sha }}
        kustomize build . | kubectl apply -f -
        kubectl -n prueba rollout status deployment/prueba-gha
        URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
        while [[ $URL != *"ngrok"* ]]; do
          echo "Still not ready" && sleep 5
          URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
        done
        echo "::set-output name=url::$URL"
    - name: Add Ngrok URL comment to PR
      uses: unsplash/comment-on-pr@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: "URL for environment is: ${{ steps.kubectl.outputs.url }}"
